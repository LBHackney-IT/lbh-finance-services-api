service: finance-services-api
provider:
  name: aws
  runtime: dotnetcore3.1
  memorySize: 2048
  timeout: 30
  tracing:
    lambda: true
    apiGateway: true
  vpc: ${self:custom.vpc.${opt:stage}}
  stage: ${opt:stage}
  #account: ${opt:account}
  region: eu-west-2

package:
  artifact: ./bin/release/netcoreapp3.1/finance-services-api.zip

functions:
  FinanceServicesApi:
    name: ${self:service}-${self:provider.stage}
    handler: FinanceServicesApi::FinanceServicesApi.LambdaEntryPoint::FunctionHandlerAsync
    role: lambdaExecutionRole
    environment:
      ACCOUNT_API_URL: ${ssm:/housing-finance/${self:provider.stage}/account-api-url}
      TRANSACTION_API_URL: ${ssm:/housing-finance/${self:provider.stage}/financial-transactions-api-url}
      TENURE_API_URL: ${ssm:/housing-finance/${self:provider.stage}/tenure-api-url}
      FINANCIAL_SUMMARY_API_URL: ${ssm:/housing-finance/${self:provider.stage}/financial-summary-api-url}
      CHARGES_API_URL: ${ssm:/housing-finance/${self:provider.stage}/charge-api-url}
      CONTACT_DETAILS_API_URL: ${ssm:/housing-finance/${self:provider.stage}/contact-details-api-url}
      ASSET_INFORMATION_API_URL: ${ssm:/housing-finance/${self:provider.stage}/asset-information-api-url}
      PERSON_API_URL: ${ssm:/housing-finance/${self:provider.stage}/person-api-url}
      SEARCH_API_URL: ${ssm:/housing-finance/${self:provider.stage}/housing-search-api-url}
      HOUSING_SEARCH_API_TOKEN: ${ssm:/housing-finance/${self:provider.stage}/housing-search-api-token}
      REQUIRED_GOOGL_GROUPS: ${ssm:/housing-finance/${self:provider.stage}/authorization/required-google-groups}
    events:
      - http:
          path: /{proxy+}
          method: ANY
          authorizer:
            arn: ${ssm:/api-authenticator/${self:provider.stage}/arn}
            type: request
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            managedExternally: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - If-Match
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
      - http:
          path: /swagger/{proxy+}
          method: GET
          private: false
resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /${self:service}/${self:provider.stage}/
        RoleName: ${self:service}-lambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        Policies:
          - PolicyName: manageLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - "Ref": "ServerlessDeploymentBucket"
          - PolicyName: lambdaInvocation
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"
          - PolicyName: transactionsDynamoDBAccess
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "dynamodb:BatchGet*"
                    - "dynamodb:DescribeStream"
                    - "dynamodb:DescribeTable"
                    - "dynamodb:Get*"
                    - "dynamodb:Query"
                    - "dynamodb:Scan"
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:dynamodb'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'table/Transactions'
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:dynamodb'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'table/Transactions/index/*'
                - Effect: Allow
                  Action:
                    - "dynamodb:Query"
                    - "dynamodb:Scan"
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:dynamodb'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'table/Transactions/index/*'
          - PolicyName: accountDynamoDBAccess
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "dynamodb:BatchGet*"
                    - "dynamodb:DescribeStream"
                    - "dynamodb:DescribeTable"
                    - "dynamodb:Get*"
                    - "dynamodb:Query"
                    - "dynamodb:Scan"
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:dynamodb'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'table/Accounts'
                - Effect: Allow
                  Action:
                    - "dynamodb:Query"
                    - "dynamodb:Scan"
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:dynamodb'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'table/Accounts/index/*'
          - PolicyName: chargesDynamoDBAccess
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "dynamodb:BatchGet*"
                    - "dynamodb:DescribeStream"
                    - "dynamodb:DescribeTable"
                    - "dynamodb:Get*"
                    - "dynamodb:Query"
                    - "dynamodb:Scan"
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:dynamodb'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'table/Charges'
                - Effect: Allow
                  Action:
                    - dynamodb:Query
                    - dynamodb:Scan
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:dynamodb'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'table/Charges/index/*'
custom:
  vpc:
    development:
      securityGroupIds:
        - sg-00d2e14f38245dd0b
      subnetIds:
        - subnet-0140d06fb84fdb547
        - subnet-05ce390ba88c42bfd
    staging:
      securityGroupIds:
        - sg-00c197e980177983d
      subnetIds:
        - subnet-0743d86e9b362fa38
        - subnet-0ea0020a44b98a2ca
    production:
      securityGroupIds:
        - sg-02a377899622e884c
      subnetIds:
        - subnet-0beb266003a56ca82
        - subnet-06a697d86a9b6ed01
